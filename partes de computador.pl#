%regra do inicio da consulta.


consulta:-
    write("Bem vindo(a)! Qual peça de computador você gostaria de saber mais sobre? Digite o número:"), nl,
    write("1. Processador"),nl,
    write("2. Placa Mãe"), nl,
    write("3. Memoria RAM"), nl,
    write("4. Placa de video"), nl,
    write("5. Armazenamento"),nl,
    write("6. fonte de alimentação"),nl,
    read(Opcao),nl,
    escolha(Opcao).


%Filtra e mostra os dados das peças correspondentes.

filtrar_placa_video(FonteM, MemoriaM, PrecoM) :-
    placa_de_video(Nome,_, Saida, Resolucao, Fonte, Memoria, Preco),
    Fonte =< FonteM,
    Memoria =< MemoriaM,
    Preco =< PrecoM,nl,
    write("--------------------------------------------"),nl,
    write("Nome: "), write(Nome),nl,
    write("Saida: "), write(Saida),nl,
    write("Resolução: "), write(Resolucao),nl,
    write("Fonte: "), write(Fonte),write("W"),nl,
    write("Memoria:"), write(Memoria),write("GB"),nl,
    write("Preco: R$"),write(Preco),nl,
    write("--------------------------------------------"),nl,
    fail.

filtrar_processadores(VelocidadeMI, VelocidadeMA, PrecoM) :-
    processador(Nome, _ , VelocidadeMin, VelocidadeMax, Soquete, Preco),
    VelocidadeMin >= VelocidadeMI,
    VelocidadeMax =< VelocidadeMA,
    Preco =< PrecoM,
    nl,
    write("--------------------------------------------"),nl,
    write("Nome: "), write(Nome),nl,
    write("Velocidade minima: "), write(VelocidadeMin),nl,
    write("Velocidade Maxima:  "), write(VelocidadeMax),nl,
    write("Soquete: "), write(Soquete),nl,
    write("Preco: R$"),write(Preco),nl,
    write("--------------------------------------------"),nl,
    fail.

filtrar_RAM(DdrF,FrequenciaM, VelocidadeM, PrecoM) :-
    memoria_ram(Nome, _ , Ddr , Frequencia, Velocidade, Preco),
    Ddr = DdrF,
    Frequencia >= FrequenciaM,
    Velocidade =< VelocidadeM,
    Preco =< PrecoM,
    nl,
    write("--------------------------------------------"),nl,
    write("Nome: "), write(Nome), nl,
    write("DDR: "), write(Ddr), nl,
    write("Frequencia: ") , write(Frequencia),write("MHz"), nl,
    write("Velocidade: "), write(Velocidade),write("GB"), nl,
    write("Preço: "),write("R$ "), write(Preco),nl,
    write("--------------------------------------------"),nl,
    fail.


filtrar_placa_mae(EntradaM, TamanhoM , Ddr, PrecoM) :-
    placas_mae(Nome,_,Tamanho,Soquete,DDR,Entrada,_,Preco),
    Entrada = EntradaM,
    Tamanho = TamanhoM,
    Ddr = DDR,
    Preco =< PrecoM,
    nl,
    write("--------------------------------------------"),nl,
    write("Nome: "), write(Nome),nl,
    write("Tamanho da placa mãe: "), write(Tamanho),nl,
    write("Soquete:  "), write(Soquete),nl,
    write("DDR"),write(DDR),nl,
    write("Tem entrada M.2?: "), write(Entrada),nl,
    write("Preco: R$"),write(Preco),nl,
    write("--------------------------------------------"),nl,
    fail.

filtrar_armazenamento(TipoM , CapacidadeM, PrecoM) :-
    armazenamento(Nome,_,Tipo,Capacidade,Preco),
    Tipo = TipoM,
    Capacidade =< CapacidadeM,
    Preco =< PrecoM,
    nl,
    write("--------------------------------------------"),nl,
    write("Nome: "), write(Nome),nl,
    write("Tipo de armazenamento: "),write(Tipo),nl,
    write("Quantidade de armazenamento: "), write(Capacidade), write("GB"),nl,
    write("Preco: R$"),write(Preco),nl,
    write("--------------------------------------------"),nl,
    fail.

filtrar_fonte(VoltagemM , Modular, PrecoM) :-
    fontes(Nome, _ , Voltagem,Modular,Preco),
    Voltagem =< VoltagemM,
    Preco =< PrecoM,
    nl,
    write("--------------------------------------------"),nl,
    write("Nome: "), write(Nome),nl,
    write("voltagem: "),write(Voltagem),write("W"),nl,
    write("A fonte é modular?: "), write(Modular),nl,
    write("Preco: R$"),write(Preco),nl,
    write("--------------------------------------------"),nl,
    fail.



%recebe os valores para a filtragem dos processadores.



filtroP(1):-
    write("Digite as velocidades para pesquisa:"),nl,nl,
    write("Velocidade Minima: "), read(VelocidadeMI), nl,
    write("Velocidade Maxima: "), read(VelocidadeMA),nl,
    filtrar_processadores(VelocidadeMI,VelocidadeMA,100000000).

filtroP(2):-
    write("Escreva o preço maximo para a busca"),nl,nl,
    write("PreçoMaximo: "), read(PrecoM), nl,nl,
    filtrar_processadores(0 , 10 , PrecoM).
% ------------------------------------------------------------------------


% recebe os valores para a filtragem das placas de video.


filtroPV(1):-
    write("Digite a voltagem maxima da placa de video que deseja pesquisar:"),nl,nl,
    read(VoltagemM), nl,nl,
    filtrar_placa_video(VoltagemM , 10000 ,100000).

filtroPV(2):-
    write("Digite a quantidade de memoria VRAM maxima que deseja obter:"),nl,nl,
    read(MemoriaM), nl,nl,
    filtrar_placa_video(100000 , MemoriaM , 1000000).

filtroPV(3):-
    write("Digite o preço maximo para a busca:"),nl,nl,
    write("PreçoMaximo: "), read(PrecoM), nl,nl,
    filtrar_placa_video(10000 , 1000 , PrecoM).

%---------------------------------------------------------

%filtros da memoria RAM.

filtroMR(1):-
    write("Digite o numero do DDR da memoria RAM que deseja buscar:"),
    read(Ddr), nl,nl,
    filtrar_RAM(Ddr, 1000 ,100000000, 1000000).

filtroMR(2):-
    write("Digite a frequencia maxima da memoria RAM que deseja buscar:"),nl,nl,
    read(FrequenciaM), nl,nl,
    filtrar_RAM(_ , FrequenciaM, 1000 , 1000000).

filtroMR(3):-
    write("Digite a velocidade maxima da memoria RAM que deseja buscar:"),nl,nl,
    read(VelocidadeM), nl,nl,
    filtrar_RAM(_, 10000 , VelocidadeM , 1000000).

filtroMR(4):-
    write("Digite o preço maximo para a busca:"),nl,nl,
    read(PrecoM), nl,nl,
    filtrar_RAM(_, 10000 , 1000 , PrecoM).

%----------------------------------------------------.

%Filtros da placa mae.

filtroPM(1):-
    write("Buscar placas que tem entrada M.2? Escreva Sim ou Não entre aspas"),nl,nl,
    read(Entrada), nl,nl,
    filtrar_placa_mae(Entrada, _ ,_ , 100000).

filtroPM(2):-
    write("Digite o tamanho, ""ATX"" ou ""Micro ATX"", da placa mãe que deseja buscar."),nl,nl,
    read(Tamanho), nl,nl,
    filtrar_placa_mae(_ , Tamanho ,_ ,100000).

filtroPM(3):-
    write("Digite o preço maximo para a busca:"),nl,write("Lista de DDRs: 3, 4 e 5"),nl,nl,
    read(DDR), nl,nl,
    filtrar_placa_mae( _,_ , DDR , 100000).

filtroPM(4):-
    write("Digite o preço maximo para a busca:"),nl,nl,
    read(PrecoM), nl,nl,
    filtrar_placa_mae( _ , _, _ , PrecoM).

%-----------------------------------------------.

%Filtros de armazenamento.

filtroA(1):-
    write("Escolha o tipo de armazenamento, escreva ""HDD"" ou ""SSD"" com as aspas, que deseja buscar:"),nl,nl,
    read(Tipo), nl,nl,
    filtrar_armazenamento( Tipo , 99999999, 100000).

filtroA(2):-
    write("Digite a quantidade de armazenamento maximo que voce deseja buscar:"),nl,nl,
    read(Capacidade), nl,nl,
    filtrar_armazenamento( _ , Capacidade, 100000).

filtroA(3):-
    write("Digite o preço maximo para a busca:"),nl,nl,
    read(PrecoM), nl,nl,
    filtrar_armazenamento( _ , 99999999 , PrecoM).

%-----------------------------------------------------.

%Filtro de fontes.


filtroF(1):-
    write("Digite a voltagem maxima que deseja buscar:"),nl,nl,
    read(Voltagem), nl,nl,
    filtrar_fonte( Voltagem , _ , 9999999).

filtroF(2):-
    write("Pesquisar placas modulares? Digite ""Sim"" ou ""Não"""),nl,nl,
    read(Modular), nl,nl,
    filtrar_fonte( 9999999 , Modular, 999999).

filtroF(3):-
    write("Digite o preço maximo para a busca:"),nl,nl,
    read(PrecoM), nl,nl,
    filtrar_fonte( 9999999 , _ , PrecoM).

%-----------------------------------------------

escolha(1):-
    write("Escolha a opção de filtragem"),nl,nl,
    write("1.Velocidade"),nl,
    write("2.Preço"),nl,
    read(Num),nl,nl,
    filtroP(Num).


escolha(2):-
    write("Escolha a opção de filtragem"),nl,nl,
    write("1.Entrada m.2"),nl,
    write("2.Tamanho"),nl,
    write("3.DDR"),nl,
    write("4.Preço"),nl,
    read(Num),nl,nl,
    filtroPM(Num).


escolha(3):-
    write("Escolha a opção de filtragem"),nl,nl,
    write("1.Ddr"),nl,
    write("2.Frequencia"),nl,
    write("3.Velocidade"),nl,
    write("4.preço"),nl,
    read(Num),nl,nl,
    filtroMR(Num).


escolha(4):-
    write("Escolha a opção de filtragem"),nl,nl,
    write("1.Voltagem"),nl,
    write("2.Memoria"),nl,
    write("3.Preço"),nl,
    read(Num),nl,nl,
    filtroPV(Num).

escolha(5):-
    write("Escolha a opção de filtragem"),nl,nl,
    write("1.Tipo de armazenamento"),nl,
    write("2.Tamanho de armazenamento"),nl,
    write("3.Preço"),nl,
    read(Num),nl,nl,
    filtroA(Num).

escolha(6):-
    write("Escolha a opção de filtragem"),nl,nl,
    write("1.Voltagem"),nl,
    write("2.Modularização"),nl,
    write("3.Preço"),nl,
    read(Num),nl,nl,
    filtroF(Num).





%Banco 1: Processador.

%processador(Nome, ID, VelocidadeMin, VelocidadeMax, Soquete, Preco).



processador("Intel core i5-12400F", 1 , 2.4, 4.4 , "FCLGA1700" , 1200).
processador("AMD Ryzen 9 3900x", 2 , 3.8, 4.6 ,"AM4" , 2130).
processador("AMD Ryzen 5 5600G", 3 , 3.9, 4.4 , "AM4" , 1665).
processador("Intel Core i3-13100F", 4, 3.4, 4.5, "FCLGA1700", 970).
processador("AMD Ryzen 5 5600", 5, 3.5, 4.4, "AM4", 1033).
processador("AMD Ryzen 9 5950X", 6, 3.4, 4.9, "AM4", 4105).
processador("Intel Core i9-11900K", 7, 3.5, 5.3, "FCLGA1200", 4393).
processador("AMD Ryzen 7 5800X", 8, 3.8, 4.7, "AM4", 1999).
processador("Intel Core i7-11700K", 9, 3.96, 5.0, "FCLGA1200", 2607).
processador("Intel Core i5-11600K", 10, 3.9, 4.9, "FCLGA1200", 1868).
processador("AMD Ryzen 7 5700X", 11, 3.4, 4.6, "AM4", 1399).
processador("Intel Core i5-10400F", 12, 2.9, 4.3, "FCLGA1200", 750).
processador("AMD Ryzen 5 4600G", 13, 3.7, 4.2, "AM4", 700).
processador("Intel Core i5-11400F", 14, 2.6, 4.4, "FCLGA1200", 1000).
processador("AMD Ryzen 7 3800X", 15, 3.9, 4.5, "AM4", 2300).
processador("Intel Core i7-9700K", 16, 3.6, 4.9, "FCLGA1151", 5000).
processador("AMD Ryzen 9 3900X", 17, 3.8, 4.6, "AM4", 2000).
processador("Intel Core i9-9900K", 18, 3.6, 5.0, "FCLGA1151", 3500).
processador("AMD Ryzen 5 2600X", 19, 3.6, 4.2, "AM4", 900).
processador("Intel Core i3-10100", 20, 3.6, 4.3, "FCLGA1200", 700).
processador("AMD Ryzen 3 3300X", 21, 3.8, 4.3, "AM4", 1000).
processador("Intel Core i5-10400F", 22, 2.9, 4.3, "FCLGA1200", 800).
processador("AMD Ryzen 5 3600X", 23, 3.8, 4.4, "AM4", 1000).
processador("Intel Core i7-10700F", 24, 2.9, 4.8, "FCLGA1200", 1700).
processador("AMD Ryzen 7 2700X", 25, 3.7, 4.3, "AM4", 1500).
processador("Intel Core i9-10900F", 26, 2.8, 5.2, "FCLGA1200", 3000).
processador("AMD Ryzen 9 3900XT", 27, 3.8, 4.7, "AM4", 2000).
processador("Intel Core i5-10600K", 28, 4.1, 4.8, "FCLGA1200", 2000).
processador("AMD Ryzen 5 5600", 29, 3.7, 4.6, "AM4", 900).
processador("Intel Core i7-11700F", 30, 2.5, 4.9, "FCLGA1200", 1600).
processador("Intel Core i5-12400F", 31, 2.4, 4.4, "FCLGA1700", 1500).
processador("AMD Ryzen 9 3900x", 32, 3.8, 4.6, "AM4", 2130).
processador("AMD Ryzen 5 5600G", 33, 3.9, 4.4, "AM4", 1665).

%Banco 2: Placa Mãe.

%placa-mae(nome,id,tamanho,soquete,DDR,m.2,slots da memoria ram,preço).


placas_mae("ASUS TUF Gaming - X570-Plus", 1, "ATX", 4, 4, "Sim", 4, 1948).
placas_mae("Gigabyte B450 AORUS ELITE", 2, "ATX", 4, 4, "Não", 4, 839).
placas_mae("MSI MAG B550 TOMAHAWK", 3, "ATX", 4, 4, "Sim", 4, 1099).
placas_mae("ASRock B550M Steel Legend", 4, "Micro ATX", 4, 4, "Sim", 4, 809).
placas_mae("ASUS ROG Strix Z490-E Gaming", 5, "ATX", 4, 4, "Sim", 4, 2479).
placas_mae("Gigabyte Z390 AORUS PRO", 6, "ATX", 4, 4, "Sim", 4, 1289).
placas_mae("MSI MPG Z590 GAMING EDGE WIFI", 7, "ATX", 4, 4, "Sim", 4, 1699).
placas_mae("ASRock B450M-HDV R4.0", 8, "Micro ATX", 4, 2, "Não", 2, 399).
placas_mae("ASUS Prime X570-P", 9, "ATX", 4, 4, "Sim", 4, 1129).
placas_mae("Gigabyte B560M DS3H", 10, "Micro ATX", 4, 4, "Sim", 4, 539).
placas_mae("MSI MPG Z490 GAMING PLUS", 11, "ATX", 4, 4, "Sim", 4, 1149).
placas_mae("ASRock B450 PRO4", 12, "ATX", 4, 4, "Não", 4, 609).
placas_mae("ASUS ROG Strix B550-F Gaming", 13, "ATX", 4, 4, "Sim", 4, 1399).
placas_mae("Gigabyte Z390 GAMING X", 14, "ATX", 4, 4, "Sim", 4, 1019).
placas_mae("MSI MAG B550M MORTAR", 15, "Micro ATX", 4, 4, "Sim", 4, 949).
placas_mae("ASRock H470 Steel Legend", 16, "ATX", 4, 4, "Não", 4, 759).
placas_mae("ASUS TUF Gaming B560M-PLUS", 17, "Micro ATX", 4, 4, "Sim", 4, 789).
placas_mae("Gigabyte B550M DS3H AC", 18, "Micro ATX", 4, 4, "Sim", 4, 659).
placas_mae("MSI B450 TOMAHAWK MAX", 19, "ATX", 4, 4, "Não", 4, 839).
placas_mae("ASRock B450M-HDV R4.0", 20, "Micro ATX", 4, 2, "Não", 2, 399).
placas_mae("ASUS Prime X570-P", 21, "ATX", 4, 4, "Sim", 4, 1129).
placas_mae("Gigabyte B560M DS3H", 22, "Micro ATX", 4, 4, "Sim", 4, 539).
placas_mae("MSI MPG Z490 GAMING PLUS", 23, "ATX", 4, 4, "Sim", 4, 1149).
placas_mae("ASRock B450 PRO4", 24, "ATX", 4, 4, "Não", 4, 609).
placas_mae("ASUS ROG Strix B550-F Gaming", 25, "ATX", 4, 4, "Sim", 4, 1399).
placas_mae("Gigabyte Z390 GAMING X", 26, "ATX", 4, 4, "Sim", 4, 1019).
placas_mae("MSI MAG B550M MORTAR", 27, "Micro ATX", 4, 4, "Sim", 4, 949).
placas_mae("ASRock H470 Steel Legend", 28, "ATX", 4, 4, "Não", 4, 759).
placas_mae("ASUS TUF Gaming B560M-PLUS", 29, "Micro ATX", 4, 4, "Sim", 4, 789).
placas_mae("Gigabyte B550M DS3H AC", 30, "Micro ATX", 4, 4, "Sim", 4, 659).




%Banco 3: Memoria RAM.

%memoria_ram(nome,id,ddr,velocidade,frequencia,preço).



memoria_ram("Corsair Vengeance LPX", 1, 4, 3200, 8, 100).
memoria_ram("G.Skill Ripjaws V", 2, 4, 3600, 16, 150).
memoria_ram("Crucial Ballistix", 3, 4, 3000, 8, 90).
memoria_ram("Kingston HyperX Fury", 4, 4, 2400, 16, 120).
memoria_ram("ADATA XPG Spectrix D41", 5, 4, 3200, 32, 250).
memoria_ram("Samsung DDR3", 6, 3, 1600, 8, 80).
memoria_ram("HyperX Fury Black", 7, 3, 1866, 16, 110).
memoria_ram("Crucial DDR3L", 8, "3L", 1600, 8, 70).
memoria_ram("G.Skill Trident Z", 9, 4, 4000, 32, 350).
memoria_ram("Corsair Dominator Platinum", 10, 4, 3200, 64, 600).


%Banco 4

%placa_de_video(Nome,Id,Saida,Resolução,Fonte,Memoria, Preco).



placa_de_video("NVIDIA GeForce RTX 3080", 1,"HDMI", "4K", 750, 10, 4999).
placa_de_video("AMD Radeon RX 6900 XT", 2, "HDMI", "4K", 850, 16, 5999).
placa_de_video("NVIDIA GeForce RTX 3070", 3, "HDMI", "4K", 650, 8, 3499).
placa_de_video("AMD Radeon RX 6800 XT", 4, "HDMI", "4K", 750, 16, 4299).
placa_de_video("NVIDIA GeForce GTX 1660 Ti", 5,"HDMI", "1440p", 450, 6, 1799).
placa_de_video("AMD Radeon RX 6700 XT", 6, "HDMI", "1440p", 650, 12, 2499).
placa_de_video("NVIDIA GeForce RTX 3060 Ti", 7,"HDMI", "4K", 600, 8, 3199).
placa_de_video("AMD Radeon RX 5700 XT", 8, "HDMI", "1440p", 600, 8, 2299).
placa_de_video("NVIDIA GeForce GTX 1650 Super", 9,"HDMI", "1080p", 350, 4, 899).
placa_de_video("AMD Radeon RX 5600 XT", 10,"HDMI", "1080p", 450, 6, 1599).


%banco 5

%armazenamento(Nome,id,tipo,capacidade,preço).

armazenamento("Seagate Barracuda", 1, "HDD", 1000, 100).
armazenamento("Western Digital Blue", 2, "HDD", 2000, 150).
armazenamento("Toshiba P300", 3, "HDD", 500, 80).
armazenamento("Seagate IronWolf", 4, "HDD", 4000, 200).
armazenamento("Western Digital Black", 5, "HDD", 3000, 180).
armazenamento("Toshiba X300", 6, "HDD", 1000, 90).
armazenamento("Seagate FireCuda", 7, "HDD", 2000, 120).
armazenamento("Samsung SSD 860 EVO", 8, "SSD", 500, 150).
armazenamento("Crucial MX500", 9, "SSD", 1000, 200).
armazenamento("Kingston A2000", 10, "SSD", 250, 80).
armazenamento("Seagate BarraCuda Pro", 11, "HDD", 4000, 200).
armazenamento("Western Digital Red", 12, "HDD", 2000, 150).
armazenamento("Toshiba X300", 13, "HDD", 6000, 250).
armazenamento("Seagate IronWolf Pro", 14, "HDD", 8000, 300).
armazenamento("Western Digital Black", 15, "HDD", 4000, 180).
armazenamento("Toshiba N300", 16, "HDD", 8000, 280).
armazenamento("Seagate Exos X10", 17, "HDD", 10000, 750).
armazenamento("HGST Ultrastar", 18, "HDD", 4000, 400).
armazenamento("Samsung Spinpoint F4", 19, "HDD", 2000, 120).
armazenamento("Hitachi Deskstar", 20, "HDD", 3000, 150).
armazenamento("Seagate SkyHawk", 21, "HDD", 8000, 250).
armazenamento("Western Digital Purple", 22, "HDD", 4000, 180).
armazenamento("Toshiba S300", 23, "HDD", 6000, 220).
armazenamento("Seagate Surveillance", 24, "HDD", 8000, 280).
armazenamento("WD Gold Enterprise", 25, "HDD", 10000, 350).
armazenamento("Samsung 980 PRO", 26, "SSD", 500, 150).
armazenamento("Crucial MX500", 27, "SSD", 1000, 200).
armazenamento("Kingston A2000", 28, "SSD", 250, 80).
armazenamento("WD Blue SN550", 29, "SSD", 500, 120).
armazenamento("Samsung 870 EVO", 30, "SSD", 1000, 180).
armazenamento("Seagate FireCuda 520", 31, "SSD", 500, 200).
armazenamento("Corsair MP600", 32, "SSD", 1000, 250).
armazenamento("Crucial P5", 33, "SSD", 500, 180).
armazenamento("Samsung 970 EVO Plus", 34, "SSD", 500, 170).
armazenamento("WD Black SN750", 35, "SSD", 1000, 220).
armazenamento("ADATA XPG SX8200 Pro", 36, "SSD", 1000, 190).
armazenamento("Samsung 960 EVO", 37, "SSD", 500, 150).
armazenamento("Crucial P2", 38, "SSD", 500, 100).
armazenamento("Kingston KC2000", 39, "SSD", 500, 160).
armazenamento("WD Blue SN570", 40, "SSD", 500, 130).
armazenamento("Samsung 870 QVO", 41, "SSD", 2000, 220).
armazenamento("Seagate Barracuda 510", 42, "SSD", 500, 190).
armazenamento("Corsair MP400", 43, "SSD", 1000, 240).
armazenamento("Crucial BX500", 44, "SSD", 480, 60).
armazenamento("WD Blue 3D NAND", 45, "SSD", 1000, 150).
armazenamento("Samsung 860 EVO", 46, "SSD", 500, 130).
armazenamento("ADATA XPG GAMMIX S5", 47, "SSD", 1000, 180).
armazenamento("Kingston KC2500", 48, "SSD", 500, 200).
armazenamento("Crucial MX100", 49, "SSD", 512, 100).
armazenamento("Samsung 850 EVO", 50, "SSD", 500, 120).


% fontes(Nome, id, voltagem,Modular,preco).


fontes("EVGA SuperNOVA 750 G+", 1, 750, "Sim", 150).
fontes("Corsair RM750x", 2, 750, "Sim", 160).
fontes("Seasonic Focus GX-650", 3, 650, "Sim", 120).
fontes("Cooler Master MWE Gold 750", 4, 750, "Não", 130).
fontes("Thermaltake Toughpower GF1 650", 5, 650, "Sim", 110).
fontes("EVGA 600 W1", 6, 600, "Não", 50).
fontes("Corsair CX550M", 7, 550, "Sim", 85).
fontes("be quiet! Pure Power 11 600", 8, 600, "Não", 90).
fontes("SilverStone Technology Strider Gold S", 9, 650, "Não", 100).
fontes("Antec NeoECO Gold ZEN 600", 10, 600, "Não", 80).
fontes("EVGA SuperNOVA 850 P2", 11, 850, "Sim", 200).
fontes("Corsair HX850i", 12, 850, "Sim", 220).
fontes("Seasonic Prime PX-750", 13, 750, "Sim", 180).
fontes("Cooler Master MWE Gold 650 V2", 14, 650, "Não", 100).
fontes("Thermaltake Toughpower GF1 750", 15, 750, "Sim", 130).
fontes("EVGA 700 GD", 16, 700, "Não", 75).
fontes("Corsair CX650M", 17, 650, "Sim", 95).
fontes("be quiet! Pure Power 11 700", 18, 700, "Não", 110).
fontes("SilverStone Technology Strider Titanium", 19, 800, "Não", 220).
fontes("Antec Earthwatts Gold Pro 650", 20, 650, "Não", 85).
fontes("EVGA SuperNOVA 1000 G5", 21, 1000, "Sim", 250).
fontes("Corsair AX1000", 22, 1000, "Sim", 280).
fontes("Seasonic Focus GX-850", 23, 850, "Sim", 200).
fontes("Cooler Master MWE Gold 750 V2", 24, 750, "Não", 130).
fontes("Thermaltake Toughpower GF1 850", 25, 850, "Sim", 150).
fontes("EVGA SuperNOVA 850 G+", 26, 850, "Sim", 180).
fontes("Corsair RM850x", 27, 850, "Sim", 200).
fontes("Seasonic Focus GX-750", 28, 750, "Sim", 150).
fontes("Cooler Master MWE Gold 850", 29, 850, "Não", 160).
fontes("Thermaltake Toughpower GF1 750", 30, 750, "Sim", 140).
fontes("EVGA 650 GQ", 31, 650, "Sim", 110).
fontes("Corsair CX750M", 32, 750, "Sim", 130).
fontes("be quiet! Straight Power 11 650", 33, 650, "Não", 120).
fontes("SilverStone Technology Strider Gold S", 34, 750, "Sim", 160).
fontes("Antec NeoECO Gold ZEN 700", 35, 700, "Não", 100).
fontes("EVGA SuperNOVA 850 G5", 36, 850, "Sim", 220).
fontes("Corsair HX1000i", 37, 1000, "Sim", 300).
fontes("Seasonic Prime PX-850", 38, 850, "Sim", 230).
fontes("Cooler Master MWE Gold 850 V2", 39, 850, "Não", 170).
fontes("Thermaltake Toughpower GF1 850", 40, 850, "Sim", 180).
fontes("EVGA 750 GQ", 41, 750, "Sim", 130).
fontes("Corsair CX850M", 42, 850, "Sim", 150).
fontes("be quiet! Straight Power 11 700", 43, 700, "Não", 140).
fontes("SilverStone Technology Strider Titanium", 44, 850, "Não", 250).
fontes("Antec Earthwatts Gold Pro 750", 45, 750, "Não", 120).
fontes("EVGA SuperNOVA 1200 P2", 46, 1200, "Sim", 350).
fontes("Corsair AX1200i", 47, 1200, "Sim", 380).
fontes("Seasonic Focus GX-1000", 48, 1000, "Sim", 280).
fontes("Cooler Master MWE Gold 1000 V2", 49, 1000, "Não", 200).
fontes("Thermaltake Toughpower GF1 1000", 50, 1000, "Sim", 230).

















